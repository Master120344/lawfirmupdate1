document.addEventListener('DOMContentLoaded', function() {
    const body = document.body;
    const loaderWrapper = document.getElementById('loader-wrapper');
    const menuButton = document.getElementById('menuButton');
    const mobileNavMenu = document.getElementById('mobileNavMenu');

    // --- Loader ---
    if (loaderWrapper) {
        body.classList.add('loading'); // Hide content initially
        window.addEventListener('load', () => {
            setTimeout(() => { // Ensure loader shows for a bit
                body.classList.remove('loading');
                body.classList.add('loaded'); // For potential further transitions
            }, 300);
        });
    } else {
        body.classList.add('loaded'); // If no loader, show content
    }

    // --- Mobile Menu Toggle ---
    if (menuButton && mobileNavMenu) {
        menuButton.addEventListener('click', function() {
            const isOpen = mobileNavMenu.classList.toggle('open');
            menuButton.classList.toggle('active', isOpen);
            menuButton.setAttribute('aria-expanded', isOpen.toString());
            body.classList.toggle('nav-open', isOpen);
        });

        // Close menu when a link is clicked
        const navLinks = mobileNavMenu.querySelectorAll('.nav-menu-link');
        navLinks.forEach(link => {
            link.addEventListener('click', () => {
                if (mobileNavMenu.classList.contains('open')) {
                    mobileNavMenu.classList.remove('open');
                    menuButton.classList.remove('active');
                    menuButton.setAttribute('aria-expanded', 'false');
                    body.classList.remove('nav-open');
                }
            });
        });
    }

    // --- Active State for Navigation Links ---
    function setActiveNavLinks() {
        const currentPath = window.location.pathname.split("/").pop() || "index_mobile.html";

        // Bottom Nav Bar
        const bottomNavItems = document.querySelectorAll('.bottom-nav-bar .bottom-nav-item');
        bottomNavItems.forEach(item => {
            const itemHref = item.getAttribute('href').split("/").pop();
            item.classList.toggle('active', itemHref === currentPath);
        });

        // Mobile Nav Menu
        const mobileNavLinks = document.querySelectorAll('.mobile-nav-menu .nav-menu-link');
        mobileNavLinks.forEach(link => {
            const linkHref = link.getAttribute('href').split("/").pop();
            link.classList.toggle('active', linkHref === currentPath);
        });
    }
    setActiveNavLinks();

    // --- Animations on Load/Scroll ---
    function handleAnimations() {
        const elementsToAnimate = document.querySelectorAll('.animate-on-load, .animate-on-scroll');
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const el = entry.target;
                    const delay = parseInt(el.dataset.delay) || 0;
                    el.style.setProperty('--animation-override-delay', `${delay}ms`); // For CSS to use
                    el.classList.add('is-visible');
                    if (!el.classList.contains('animate-on-load')) { // Keep observing scroll items if needed
                        // observer.unobserve(el); // Unobserve if only animate once
                    }
                }
            });
        }, { threshold: 0.1 });

        elementsToAnimate.forEach(el => {
            if (el.classList.contains('animate-on-load')) {
                // Trigger load animations almost immediately or after loader
                 const delay = parseInt(el.dataset.delay) || 0;
                 el.style.setProperty('--animation-override-delay', `${delay}ms`);
                 el.classList.add('is-visible');
            } else {
                observer.observe(el);
            }
        });
    }
    // Delay animation setup slightly if loader is present
    if (loaderWrapper) {
         window.addEventListener('load', () => setTimeout(handleAnimations, 350));
    } else {
        handleAnimations();
    }
    

    // --- Dynamic Current Year ---
    const currentYearSpan = document.getElementById('currentYearMobile');
    if (currentYearSpan) {
        currentYearSpan.textContent = new Date().getFullYear();
    }
    
    // --- Smooth Scroll for #hash links ---
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            const href = this.getAttribute('href');
            if (href.length > 1 && href.startsWith('#')) { // Ensure it's a valid hash
                const targetElement = document.querySelector(href);
                if (targetElement) {
                    e.preventDefault();
                    const headerHeight = document.querySelector('.main-header')?.offsetHeight || 0;
                    const elementPosition = targetElement.getBoundingClientRect().top;
                    const offsetPosition = elementPosition + window.pageYOffset - headerHeight;

                    window.scrollTo({
                        top: offsetPosition,
                        behavior: 'smooth'
                    });
                }
            }
        });
    });

    console.log("Simplified Mobile JS Initialized");
});